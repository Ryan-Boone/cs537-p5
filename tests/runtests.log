starting build

**********************************************************************

Test build
build xv6 using make

**********************************************************************
Trying to build project using make
make xv6.img fs.img
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -fno-pic -O -nostdinc -I. -c bootmain.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -fno-pic -nostdinc -I. -c bootasm.S
ld -m    elf_i386 -N -e start -Ttext 0x7C00 -o bootblock.o bootasm.o bootmain.o
objdump -S bootblock.o > bootblock.asm
objcopy -S -O binary -j .text bootblock.o bootblock
./sign.pl bootblock
boot block is 451 bytes (max 510)
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o bio.o bio.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o console.o console.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o exec.o exec.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o file.o file.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o fs.o fs.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ide.o ide.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ioapic.o ioapic.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o kalloc.o kalloc.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o kbd.o kbd.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o lapic.o lapic.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o log.o log.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o main.o main.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o mp.o mp.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o picirq.o picirq.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o pipe.o pipe.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o proc.o proc.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sleeplock.o sleeplock.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o spinlock.o spinlock.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o string.o string.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o swtch.o swtch.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o syscall.o syscall.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sysfile.o sysfile.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sysproc.o sysproc.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o trapasm.o trapasm.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o trap.o trap.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o uart.o uart.c
./vectors.pl > vectors.S
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o vectors.o vectors.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o vm.o vm.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o wmap.o wmap.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o entry.o entry.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -fno-pic -nostdinc -I. -c entryother.S
ld -m    elf_i386 -N -e start -Ttext 0x7000 -o bootblockother.o entryother.o
objcopy -S -O binary -j .text bootblockother.o entryother
objdump -S bootblockother.o > entryother.asm
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -nostdinc -I. -c initcode.S
ld -m    elf_i386 -N -e start -Ttext 0 -o initcode.out initcode.o
objcopy -S -O binary initcode.out initcode
objdump -S initcode.o > initcode.asm
ld -m    elf_i386 -T kernel.ld -o kernel entry.o bio.o console.o exec.o file.o fs.o ide.o ioapic.o kalloc.o kbd.o lapic.o log.o main.o mp.o picirq.o pipe.o proc.o sleeplock.o spinlock.o string.o swtch.o syscall.o sysfile.o sysproc.o trapasm.o trap.o uart.o vectors.o vm.o wmap.o  -b binary initcode entryother
objdump -S kernel > kernel.asm
objdump -t kernel | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > kernel.sym
dd if=/dev/zero of=xv6.img count=10000
10000+0 records in
10000+0 records out
5120000 bytes (5.1 MB, 4.9 MiB) copied, 0.0677535 s, 75.6 MB/s
dd if=bootblock of=xv6.img conv=notrunc
1+0 records in
1+0 records out
512 bytes copied, 0.000112914 s, 4.5 MB/s
dd if=kernel of=xv6.img seek=1 conv=notrunc
435+1 records in
435+1 records out
223220 bytes (223 kB, 218 KiB) copied, 0.000683852 s, 326 MB/s
gcc -Werror -Wall -o mkfs mkfs.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ulib.o ulib.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o usys.o usys.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o printf.o printf.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o umalloc.o umalloc.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o cat.o cat.c
ld -m    elf_i386 -e main -Ttext 0 -o _cat cat.o ulib.o usys.o printf.o umalloc.o
objdump -S _cat > cat.asm
objdump -t _cat | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > cat.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o echo.o echo.c
ld -m    elf_i386 -e main -Ttext 0 -o _echo echo.o ulib.o usys.o printf.o umalloc.o
objdump -S _echo > echo.asm
objdump -t _echo | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > echo.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o forktest.o forktest.c
# forktest has less library code linked in - needs to be small
# in order to be able to max out the proc table.
ld -m    elf_i386 -N -e main -Ttext 0 -o _forktest forktest.o ulib.o usys.o
objdump -S _forktest > forktest.asm
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o grep.o grep.c
ld -m    elf_i386 -e main -Ttext 0 -o _grep grep.o ulib.o usys.o printf.o umalloc.o
objdump -S _grep > grep.asm
objdump -t _grep | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > grep.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o init.o init.c
ld -m    elf_i386 -e main -Ttext 0 -o _init init.o ulib.o usys.o printf.o umalloc.o
objdump -S _init > init.asm
objdump -t _init | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > init.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o kill.o kill.c
ld -m    elf_i386 -e main -Ttext 0 -o _kill kill.o ulib.o usys.o printf.o umalloc.o
objdump -S _kill > kill.asm
objdump -t _kill | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > kill.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ln.o ln.c
ld -m    elf_i386 -e main -Ttext 0 -o _ln ln.o ulib.o usys.o printf.o umalloc.o
objdump -S _ln > ln.asm
objdump -t _ln | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > ln.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ls.o ls.c
ld -m    elf_i386 -e main -Ttext 0 -o _ls ls.o ulib.o usys.o printf.o umalloc.o
objdump -S _ls > ls.asm
objdump -t _ls | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > ls.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o mkdir.o mkdir.c
ld -m    elf_i386 -e main -Ttext 0 -o _mkdir mkdir.o ulib.o usys.o printf.o umalloc.o
objdump -S _mkdir > mkdir.asm
objdump -t _mkdir | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > mkdir.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o rm.o rm.c
ld -m    elf_i386 -e main -Ttext 0 -o _rm rm.o ulib.o usys.o printf.o umalloc.o
objdump -S _rm > rm.asm
objdump -t _rm | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > rm.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sh.o sh.c
ld -m    elf_i386 -e main -Ttext 0 -o _sh sh.o ulib.o usys.o printf.o umalloc.o
objdump -S _sh > sh.asm
objdump -t _sh | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > sh.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o stressfs.o stressfs.c
ld -m    elf_i386 -e main -Ttext 0 -o _stressfs stressfs.o ulib.o usys.o printf.o umalloc.o
objdump -S _stressfs > stressfs.asm
objdump -t _stressfs | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > stressfs.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o usertests.o usertests.c
ld -m    elf_i386 -e main -Ttext 0 -o _usertests usertests.o ulib.o usys.o printf.o umalloc.o
objdump -S _usertests > usertests.asm
objdump -t _usertests | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > usertests.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o wc.o wc.c
ld -m    elf_i386 -e main -Ttext 0 -o _wc wc.o ulib.o usys.o printf.o umalloc.o
objdump -S _wc > wc.asm
objdump -t _wc | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > wc.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o zombie.o zombie.c
ld -m    elf_i386 -e main -Ttext 0 -o _zombie zombie.o ulib.o usys.o printf.o umalloc.o
objdump -S _zombie > zombie.asm
objdump -t _zombie | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > zombie.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o test.o test.c
ld -m    elf_i386 -e main -Ttext 0 -o _test test.o ulib.o usys.o printf.o umalloc.o
objdump -S _test > test.asm
objdump -t _test | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > test.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 873 blocks have been allocated
balloc: write bitmap block at sector 58


test build PASSED
 (build xv6 using make)

starting test_1

**********************************************************************

Test test_1
Checks the presence of all system calls

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_1.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 935 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_1
INFO: va2pa(0x0) returned 0xDED9000
INFO: total_mmaps = 0
sys_wmap: Checking range addr=0x0 len=4096
sys_wmap: Address range not free
INFO: wmap() returned -1
INFO: wunmap() returned -1
[0;32mSUCCESS:[0m TEST_1	 PASSED

$ 

test test_1 PASSED (1 of 1)
 (Checks the presence of all system calls)

starting test_2

**********************************************************************

Test test_2
Checks the presence of Segmentation Fault

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_2.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 934 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_2
Segmentation Fault
$ 

test test_2 PASSED (1 of 1)
 (Checks the presence of Segmentation Fault)

starting test_3

**********************************************************************

Test test_3
MAP: Place one fixed anonymous map

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_3.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 935 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_3
INFO: Initially 0 maps. 	Okay.
sys_wmap: Checking range addr=0x60002000 len=20480
Range 0x60002000-0x60007000 is free
Created mapping: addr=0x60002000, length=0x4008, flags=0xe
INFO: Map 1 at 0x60002000 with length 0x4008. 	Okay.
sys_wmap: Invalid flags 0x6
sys_wmap: Invalid flags 0xd
[0;32mSUCCESS:[0m TEST_3	 PASSED

$ 

test test_3 PASSED (1 of 1)
 (MAP: Place one fixed anonymous map)

starting test_4

**********************************************************************

Test test_4
MAP: Place one fixed filebacked map

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_4.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 935 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk...
xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_4
INFO: Initially 0 maps. 	Okay.
INFO: Created file small.txt with length 512 bytes. 	Okay.
sys_wmap: Checking range addr=0x6002f000 len=4096
Range 0x6002f000-0x60030000 is free
Created mapping: addr=0x6002f000, length=0x200, flags=0xa
INFO: Map 1 at 0x6002F000 with length 0x200. 	Okay.
[0;32mSUCCESS:[0m TEST_4	 PASSED

$ 

test test_4 PASSED (1 of 1)
 (MAP: Place one fixed filebacked map)

starting test_5

**********************************************************************

Test test_5
MAP: Place multiple maps, verify that overlapping maps are not allowed

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_5.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 945 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_5
INFO: Initially 0 maps. 	Okay.
INFO: Created file small.txt with length 512 bytes. 	Okay.
sys_wmap: Checking range addr=0x60000000 len=4096
Range 0x60000000-0x60001000 is free
Created mapping: addr=0x60000000, length=0x200, flags=0xa
INFO: Map 1 at 0x60000000 with length 512. 	Okay.
sys_wmap: Checking range addr=0x60002000 len=8192
Checking overlap: new(0x60002000-0x60004000) vs existing(0x60000000-0x60000200)
Range 0x60002000-0x60004000 is free
Created mapping: addr=0x60002000, length=0x2000, flags=0xe
INFO: Map 2 at 0x60002000 with length 8192. 	Okay.
sys_wmap: Checking range addr=0x60003000 len=16384
Checking overlap: new(0x60003000-0x60007000) vs existing(0x60000000-0x60000200)
Checking overlap: new(0x60003000-0x60007000) vs existing(0x60002000-0x60004000)
Overlap detected!
sys_wmap: Address range not free
INFO: Map 3 does not exist. 	Okay.
sys_wmap: Checking range addr=0x60004000 len=819200
Checking overlap: new(0x60004000-0x600cc000) vs existing(0x60000000-0x60000200)
Checking overlap: new(0x60004000-0x600cc000) vs existing(0x60002000-0x60004000)
Range 0x60004000-0x600cc000 is free
Created mapping: addr=0x60004000, length=0xc8000, flags=0xe
INFO: Map 4 at 0x60004000 with length 819200. 	Okay.
[0;32mSUCCESS:[0m TEST_5	 PASSED

$ 

test test_5 PASSED (1 of 1)
 (MAP: Place multiple maps, verify that overlapping maps are not allowed)

starting test_6

**********************************************************************

Test test_6
MAP+ALLOC: Access fixed anonymous map (checks for memory allocation)

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_6.c
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 936 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_6
INFO: Initially 0 maps. 	Okay.
sys_wmap: Checking range addr=0x60002000 len=12288
Range 0x60002000-0x60005000 is free
Created mapping: addr=0x60002000, length=0x2064, flags=0xe
INFO: Map 1 at 0x60002000 with length 8292. 	Okay.
INFO: Accessed all pages of Map 1. 	Okay.
[0;32mSUCCESS:[0m TEST_6	 PASSED

$ 

test test_6 PASSED (1 of 1)
 (MAP+ALLOC: Access fixed anonymous map (checks for memory allocation))

starting test_7

**********************************************************************

Test test_7
MAP+ALLOC: access big filebacked map (checks for memory allocation)

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_7.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 937 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_7
INFO: Initially 0 maps. 	Okay.
INFO: 113
INFO: 114
INFO: 115
INFO: 116
INFO: 117
INFO: Created file big.txt with length 20480 bytes. 	Okay.
sys_wmap: Checking range addr=0x60000000 len=20480
Range 0x60000000-0x60005000 is free
Created mapping: addr=0x60000000, length=0x5000, flags=0xa
INFO: Placed map 1 at 0x60000000 with length 20480. 	Okay.
INFO: Accessed all pages of Map 1. 	Okay.
[0;32mSUCCESS:[0m TEST_7	 PASSED

$ 

test test_7 PASSED (1 of 1)
 (MAP+ALLOC: access big filebacked map (checks for memory allocation))

starting test_8

**********************************************************************

Test test_8
MAP+STRESS: Places a large number of maps and accesses all pages of each map

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_8.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 947 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_8
INFO: Initially 0 maps. 	Okay.
INFO: Created file smallfile with length 512 bytes. 	Okay.
INFO: 98
INFO: 99
INFO: 100
INFO: 101
INFO: 102
INFO: Created file bigfile with length 20480 bytes. 	Okay.
sys_wmap: Checking range addr=0x60000000 len=1638400
Range 0x60000000-0x60190000 is free
Created mapping: addr=0x60000000, length=0x190000, flags=0xe
INFO: Map 1 is placed at 0x60000000. 	Okay.
sys_wmap: Checking range addr=0x60191000 len=20480
Checking overlap: new(0x60191000-0x60196000) vs existing(0x60000000-0x60190000)
Range 0x60191000-0x60196000 is free
Created mapping: addr=0x60191000, length=0x5000, flags=0xa
INFO: Map 2 is placed at 0x60191000. 	Okay.
sys_wmap: Checking range addr=0x60190000 len=4096
Checking overlap: new(0x60190000-0x60191000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x60190000-0x60191000) vs existing(0x60191000-0x60196000)
Range 0x60190000-0x60191000 is free
Created mapping: addr=0x60190000, length=0x200, flags=0xa
INFO: Map 3 is placed at 0x60190000. 	Okay.
sys_wmap: Checking range addr=0x60196000 len=8192000
Checking overlap: new(0x60196000-0x60966000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x60196000-0x60966000) vs existing(0x60191000-0x60196000)
Checking overlap: new(0x60196000-0x60966000) vs existing(0x60190000-0x60190200)
Range 0x60196000-0x60966000 is free
Created mapping: addr=0x60196000, length=0x7d0000, flags=0xe
INFO: Map 4 is placed at 0x60196000. 	Okay.
sys_wmap: Checking range addr=0x6096b000 len=102400
Checking overlap: new(0x6096b000-0x60984000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x6096b000-0x60984000) vs existing(0x60191000-0x60196000)
Checking overlap: new(0x6096b000-0x60984000) vs existing(0x60190000-0x60190200)
Checking overlap: new(0x6096b000-0x60984000) vs existing(0x60196000-0x60966000)
Range 0x6096b000-0x60984000 is free
Created mapping: addr=0x6096b000, length=0x19000, flags=0xe
INFO: Map 5 is placed at 0x6096B000. 	Okay.
sys_wmap: Checking range addr=0x60984000 len=122880
Checking overlap: new(0x60984000-0x609a2000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x60984000-0x609a2000) vs existing(0x60191000-0x60196000)
Checking overlap: new(0x60984000-0x609a2000) vs existing(0x60190000-0x60190200)
Checking overlap: new(0x60984000-0x609a2000) vs existing(0x60196000-0x60966000)
Checking overlap: new(0x60984000-0x609a2000) vs existing(0x6096b000-0x60984000)
Range 0x60984000-0x609a2000 is free
Created mapping: addr=0x60984000, length=0x1e000, flags=0xe
INFO: Map 6 is placed at 0x60984000. 	Okay.
sys_wmap: Checking range addr=0x609a2000 len=143360
Checking overlap: new(0x609a2000-0x609c5000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x609a2000-0x609c5000) vs existing(0x60191000-0x60196000)
Checking overlap: new(0x609a2000-0x609c5000) vs existing(0x60190000-0x60190200)
Checking overlap: new(0x609a2000-0x609c5000) vs existing(0x60196000-0x60966000)
Checking overlap: new(0x609a2000-0x609c5000) vs existing(0x6096b000-0x60984000)
Checking overlap: new(0x609a2000-0x609c5000) vs existing(0x60984000-0x609a2000)
Range 0x609a2000-0x609c5000 is free
Created mapping: addr=0x609a2000, length=0x23000, flags=0xe
INFO: Map 7 is placed at 0x609A2000. 	Okay.
sys_wmap: Checking range addr=0x609c5000 len=163840
Checking overlap: new(0x609c5000-0x609ed000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x609c5000-0x609ed000) vs existing(0x60191000-0x60196000)
Checking overlap: new(0x609c5000-0x609ed000) vs existing(0x60190000-0x60190200)
Checking overlap: new(0x609c5000-0x609ed000) vs existing(0x60196000-0x60966000)
Checking overlap: new(0x609c5000-0x609ed000) vs existing(0x6096b000-0x60984000)
Checking overlap: new(0x609c5000-0x609ed000) vs existing(0x60984000-0x609a2000)
Checking overlap: new(0x609c5000-0x609ed000) vs existing(0x609a2000-0x609c5000)
Range 0x609c5000-0x609ed000 is free
Created mapping: addr=0x609c5000, length=0x28000, flags=0xe
INFO: Map 8 is placed at 0x609C5000. 	Okay.
sys_wmap: Checking range addr=0x609ed000 len=184320
Checking overlap: new(0x609ed000-0x60a1a000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x609ed000-0x60a1a000) vs existing(0x60191000-0x60196000)
Checking overlap: new(0x609ed000-0x60a1a000) vs existing(0x60190000-0x60190200)
Checking overlap: new(0x609ed000-0x60a1a000) vs existing(0x60196000-0x60966000)
Checking overlap: new(0x609ed000-0x60a1a000) vs existing(0x6096b000-0x60984000)
Checking overlap: new(0x609ed000-0x60a1a000) vs existing(0x60984000-0x609a2000)
Checking overlap: new(0x609ed000-0x60a1a000) vs existing(0x609a2000-0x609c5000)
Checking overlap: new(0x609ed000-0x60a1a000) vs existing(0x609c5000-0x609ed000)
Range 0x609ed000-0x60a1a000 is free
Created mapping: addr=0x609ed000, length=0x2d000, flags=0xe
INFO: Map 9 is placed at 0x609ED000. 	Okay.
sys_wmap: Checking range addr=0x60a1a000 len=204800
Checking overlap: new(0x60a1a000-0x60a4c000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x60a1a000-0x60a4c000) vs existing(0x60191000-0x60196000)
Checking overlap: new(0x60a1a000-0x60a4c000) vs existing(0x60190000-0x60190200)
Checking overlap: new(0x60a1a000-0x60a4c000) vs existing(0x60196000-0x60966000)
Checking overlap: new(0x60a1a000-0x60a4c000) vs existing(0x6096b000-0x60984000)
Checking overlap: new(0x60a1a000-0x60a4c000) vs existing(0x60984000-0x609a2000)
Checking overlap: new(0x60a1a000-0x60a4c000) vs existing(0x609a2000-0x609c5000)
Checking overlap: new(0x60a1a000-0x60a4c000) vs existing(0x609c5000-0x609ed000)
Checking overlap: new(0x60a1a000-0x60a4c000) vs existing(0x609ed000-0x60a1a000)
Range 0x60a1a000-0x60a4c000 is free
Created mapping: addr=0x60a1a000, length=0x32000, flags=0xe
INFO: Map 10 is placed at 0x60A1A000. 	Okay.
sys_wmap: Checking range addr=0x60a4c000 len=225280
Checking overlap: new(0x60a4c000-0x60a83000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x60a4c000-0x60a83000) vs existing(0x60191000-0x60196000)
Checking overlap: new(0x60a4c000-0x60a83000) vs existing(0x60190000-0x60190200)
Checking overlap: new(0x60a4c000-0x60a83000) vs existing(0x60196000-0x60966000)
Checking overlap: new(0x60a4c000-0x60a83000) vs existing(0x6096b000-0x60984000)
Checking overlap: new(0x60a4c000-0x60a83000) vs existing(0x60984000-0x609a2000)
Checking overlap: new(0x60a4c000-0x60a83000) vs existing(0x609a2000-0x609c5000)
Checking overlap: new(0x60a4c000-0x60a83000) vs existing(0x609c5000-0x609ed000)
Checking overlap: new(0x60a4c000-0x60a83000) vs existing(0x609ed000-0x60a1a000)
Checking overlap: new(0x60a4c000-0x60a83000) vs existing(0x60a1a000-0x60a4c000)
Range 0x60a4c000-0x60a83000 is free
Created mapping: addr=0x60a4c000, length=0x37000, flags=0xe
INFO: Map 11 is placed at 0x60A4C000. 	Okay.
sys_wmap: Checking range addr=0x60a83000 len=245760
Checking overlap: new(0x60a83000-0x60abf000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x60a83000-0x60abf000) vs existing(0x60191000-0x60196000)
Checking overlap: new(0x60a83000-0x60abf000) vs existing(0x60190000-0x60190200)
Checking overlap: new(0x60a83000-0x60abf000) vs existing(0x60196000-0x60966000)
Checking overlap: new(0x60a83000-0x60abf000) vs existing(0x6096b000-0x60984000)
Checking overlap: new(0x60a83000-0x60abf000) vs existing(0x60984000-0x609a2000)
Checking overlap: new(0x60a83000-0x60abf000) vs existing(0x609a2000-0x609c5000)
Checking overlap: new(0x60a83000-0x60abf000) vs existing(0x609c5000-0x609ed000)
Checking overlap: new(0x60a83000-0x60abf000) vs existing(0x609ed000-0x60a1a000)
Checking overlap: new(0x60a83000-0x60abf000) vs existing(0x60a1a000-0x60a4c000)
Checking overlap: new(0x60a83000-0x60abf000) vs existing(0x60a4c000-0x60a83000)
Range 0x60a83000-0x60abf000 is free
Created mapping: addr=0x60a83000, length=0x3c000, flags=0xe
INFO: Map 12 is placed at 0x60A83000. 	Okay.
sys_wmap: Checking range addr=0x60abf000 len=266240
Checking overlap: new(0x60abf000-0x60b00000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x60abf000-0x60b00000) vs existing(0x60191000-0x60196000)
Checking overlap: new(0x60abf000-0x60b00000) vs existing(0x60190000-0x60190200)
Checking overlap: new(0x60abf000-0x60b00000) vs existing(0x60196000-0x60966000)
Checking overlap: new(0x60abf000-0x60b00000) vs existing(0x6096b000-0x60984000)
Checking overlap: new(0x60abf000-0x60b00000) vs existing(0x60984000-0x609a2000)
Checking overlap: new(0x60abf000-0x60b00000) vs existing(0x609a2000-0x609c5000)
Checking overlap: new(0x60abf000-0x60b00000) vs existing(0x609c5000-0x609ed000)
Checking overlap: new(0x60abf000-0x60b00000) vs existing(0x609ed000-0x60a1a000)
Checking overlap: new(0x60abf000-0x60b00000) vs existing(0x60a1a000-0x60a4c000)
Checking overlap: new(0x60abf000-0x60b00000) vs existing(0x60a4c000-0x60a83000)
Checking overlap: new(0x60abf000-0x60b00000) vs existing(0x60a83000-0x60abf000)
Range 0x60abf000-0x60b00000 is free
Created mapping: addr=0x60abf000, length=0x41000, flags=0xe
INFO: Map 13 is placed at 0x60ABF000. 	Okay.
sys_wmap: Checking range addr=0x60b00000 len=286720
Checking overlap: new(0x60b00000-0x60b46000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x60b00000-0x60b46000) vs existing(0x60191000-0x60196000)
Checking overlap: new(0x60b00000-0x60b46000) vs existing(0x60190000-0x60190200)
Checking overlap: new(0x60b00000-0x60b46000) vs existing(0x60196000-0x60966000)
Checking overlap: new(0x60b00000-0x60b46000) vs existing(0x6096b000-0x60984000)
Checking overlap: new(0x60b00000-0x60b46000) vs existing(0x60984000-0x609a2000)
Checking overlap: new(0x60b00000-0x60b46000) vs existing(0x609a2000-0x609c5000)
Checking overlap: new(0x60b00000-0x60b46000) vs existing(0x609c5000-0x609ed000)
Checking overlap: new(0x60b00000-0x60b46000) vs existing(0x609ed000-0x60a1a000)
Checking overlap: new(0x60b00000-0x60b46000) vs existing(0x60a1a000-0x60a4c000)
Checking overlap: new(0x60b00000-0x60b46000) vs existing(0x60a4c000-0x60a83000)
Checking overlap: new(0x60b00000-0x60b46000) vs existing(0x60a83000-0x60abf000)
Checking overlap: new(0x60b00000-0x60b46000) vs existing(0x60abf000-0x60b00000)
Range 0x60b00000-0x60b46000 is free
Created mapping: addr=0x60b00000, length=0x46000, flags=0xe
INFO: Map 14 is placed at 0x60B00000. 	Okay.
sys_wmap: Checking range addr=0x60b46000 len=307200
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x60191000-0x60196000)
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x60190000-0x60190200)
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x60196000-0x60966000)
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x6096b000-0x60984000)
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x60984000-0x609a2000)
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x609a2000-0x609c5000)
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x609c5000-0x609ed000)
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x609ed000-0x60a1a000)
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x60a1a000-0x60a4c000)
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x60a4c000-0x60a83000)
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x60a83000-0x60abf000)
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x60abf000-0x60b00000)
Checking overlap: new(0x60b46000-0x60b91000) vs existing(0x60b00000-0x60b46000)
Range 0x60b46000-0x60b91000 is free
Created mapping: addr=0x60b46000, length=0x4b000, flags=0xe
INFO: Map 15 is placed at 0x60B46000. 	Okay.
sys_wmap: Checking range addr=0x60b91000 len=327680
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x60000000-0x60190000)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x60191000-0x60196000)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x60190000-0x60190200)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x60196000-0x60966000)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x6096b000-0x60984000)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x60984000-0x609a2000)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x609a2000-0x609c5000)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x609c5000-0x609ed000)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x609ed000-0x60a1a000)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x60a1a000-0x60a4c000)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x60a4c000-0x60a83000)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x60a83000-0x60abf000)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x60abf000-0x60b00000)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x60b00000-0x60b46000)
Checking overlap: new(0x60b91000-0x60be1000) vs existing(0x60b46000-0x60b91000)
Range 0x60b91000-0x60be1000 is free
Created mapping: addr=0x60b91000, length=0x50000, flags=0xe
INFO: Map 16 is placed at 0x60B91000. 	Okay.
INFO: Map 1 ~ 16 do not overlap with each other. 	Okay
	Accessed Map 1. 	Okay.
	Accessed Map 2. 	Okay.
	Accessed Map 3. 	Okay.
	Accessed Map 4. 	Okay.
	Accessed Map 5. 	Okay.
	Accessed Map 6. 	Okay.
	Accessed Map 7. 	Okay.
	Accessed Map 8. 	Okay.
	Accessed Map 9. 	Okay.
	Accessed Map 10. 	Okay.
	Accessed Map 11. 	Okay.
	Accessed Map 12. 	Okay.
	Accessed Map 13. 	Okay.
	Accessed Map 14. 	Okay.
	Accessed Map 15. 	Okay.
	Accessed Map 16. 	Okay.
INFO: Accessed all pages of Map 1 ~ 16. 	Okay.
	Map 1 is allocated. 	Okay.
	Map 2 is allocated. 	Okay.
	Map 3 is allocated. 	Okay.
	Map 4 is allocated. 	Okay.
	Map 5 is allocated. 	Okay.
	Map 6 is allocated. 	Okay.
	Map 7 is allocated. 	Okay.
	Map 8 is allocated. 	Okay.
	Map 9 is allocated. 	Okay.
	Map 10 is allocated. 	Okay.
	Map 11 is allocated. 	Okay.
	Map 12 is allocated. 	Okay.
	Map 13 is allocated. 	Okay.
	Map 14 is allocated. 	Okay.
	Map 15 is allocated. 	Okay.
	Map 16 is allocated. 	Okay.
INFO: All pages of Map 1 ~ 16 are allocated. 	Okay.
[0;32mSUCCESS:[0m TEST_8	 PASSED

$ 

test test_8 PASSED (1 of 1)
 (MAP+STRESS: Places a large number of maps and accesses all pages of each map)

starting test_9

**********************************************************************

Test test_9
MAP+LAZY: Checks for lazy allocation in anon mapping

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_9.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 935 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_9
INFO: Initially 0 maps. 	Okay.
sys_wmap: Checking range addr=0x60000000 len=12288
Range 0x60000000-0x60003000 is free
Created mapping: addr=0x60000000, length=0x3000, flags=0xe
INFO: Map 1 at 0x60000000 with length 0x3000. 	Okay.
INFO: No page have entry in pgdir yet. 	Okay.
INFO: Accessed second page. 	Okay.
INFO: First page is not allocated. 	Okay.
INFO: Second page is allocated. 	Okay.
INFO: Third page is not allocated. 	Okay.
[0;32mSUCCESS:[0m TEST_9	 PASSED

$ 

test test_9 PASSED (1 of 1)
 (MAP+LAZY: Checks for lazy allocation in anon mapping)

starting test_10

**********************************************************************

Test test_10
MAP+LAZY: Checks for lazy allocation in filebacked mapping

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_10.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 945 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_10
INFO: Initially 0 maps. 	Okay.
INFO: 111
INFO: 112
INFO: 113
INFO: Created file bigfile with length 12288 bytes. 	Okay.
INFO: Created file smallfile with length 512 bytes. 	Okay.
sys_wmap: Checking range addr=0x60000000 len=12288
Range 0x60000000-0x60003000 is free
Created mapping: addr=0x60000000, length=0x3000, flags=0xa
INFO: Map 1 at 0x60000000 with length 0x3000. 	Okay.
sys_wmap: Checking range addr=0x60004000 len=4096
Checking overlap: new(0x60004000-0x60005000) vs existing(0x60000000-0x60003000)
Range 0x60004000-0x60005000 is free
Created mapping: addr=0x60004000, length=0x200, flags=0xa
INFO: Map 2 at 0x60004000 with length 0x200. 	Okay.
INFO: n_loaded_pages zero. 	Okay.
INFO: No page have entry in pgdir yet. 	Okay.
INFO: Accessed second page. 	Okay.
INFO: SmallMap first page is allocated. 	Okay.
INFO: BigMap first page is NOT allocated. 	Okay.
INFO: BigMap second page is allocated. 	Okay.
INFO: Bigmap third page is NOT allocated. 	Okay.
[0;32mSUCCESS:[0m TEST_10	 PASSED

$ 

test test_10 PASSED (1 of 1)
 (MAP+LAZY: Checks for lazy allocation in filebacked mapping)

starting test_11

**********************************************************************

Test test_11
MAP+LAZY+STRESS: Checks for lazy allocation in filebacked mapping

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_11.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 937 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_11
INFO: Initially 0 maps. 	Okay.
sys_wmap: Checking range addr=0x60000000 len=286720000
Range 0x60000000-0x71170000 is free
Created mapping: addr=0x60000000, length=0x11170000, flags=0xe
INFO: Map 1 at 0x60000000 with length 0x11170000. 	Okay.
INFO: No page have entry in pgdir yet. 	Okay.
INFO: Accessed second page. 	Okay.
INFO: First page is not allocated. 	Okay.
INFO: Second page is allocated. 	Okay.
INFO: Third to last pages are not allocated. 	Okay.
[0;32mSUCCESS:[0m TEST_11	 PASSED

$ 

test test_11 PASSED (1 of 1)
 (MAP+LAZY+STRESS: Checks for lazy allocation in filebacked mapping)

starting test_12

**********************************************************************

Test test_12
UNMAP: Unmap a anonymous map

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_12.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 935 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_12
INFO: Initially 0 maps. 	Okay.
sys_wmap: Checking range addr=0x60002000 len=20480
Range 0x60002000-0x60007000 is free
Created mapping: addr=0x60002000, length=0x4008, flags=0xe
INFO: Map 1 at 0x60002000 with length 0x4008. 	Okay.
INFO: Map 1 unmapped. 	Okay.
[0;32mSUCCESS:[0m TEST_12	 PASSED

$ 

test test_12 PASSED (1 of 1)
 (UNMAP: Unmap a anonymous map)

starting test_13

**********************************************************************

Test test_13
UNMAP: Unmaps a filebacked map

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_13.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 936 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_13
INFO: Initially 0 maps. 	Okay.
INFO: Created file small.txt with length 512 bytes. 	Okay.
sys_wmap: Checking range addr=0x6002f000 len=4096
Range 0x6002f000-0x60030000 is free
Created mapping: addr=0x6002f000, length=0x200, flags=0xa
INFO: Map 1 at 0x6002F000 with length 0x200. 	Okay.
INFO: Map 1 unmapped. 	Okay.
[0;32mSUCCESS:[0m TEST_13	 PASSED

$ 

test test_13 PASSED (1 of 1)
 (UNMAP: Unmaps a filebacked map)

starting test_14

**********************************************************************

Test test_14
UNMAP+DEALLOC: Unmap accessed anonymous map and check for memory deallocation

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_14.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 936 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_14
INFO: Initially 0 maps. 	Okay.
sys_wmap: Checking range addr=0x60002000 len=12288
Range 0x60002000-0x60005000 is free
Created mapping: addr=0x60002000, length=0x2064, flags=0xe
INFO: Map 1 at 0x60002000 with length 8292. 	Okay.
INFO: Accessed all pages of Map 1. 	Okay.
INFO: Map 1 unmapped. 	Okay.
INFO: Unmapped pages are deallocated. 	Okay.
[0;32mSUCCESS:[0m TEST_14	 PASSED

$ 

test test_14 PASSED (1 of 1)
 (UNMAP+DEALLOC: Unmap accessed anonymous map and check for memory deallocation)

starting test_15

**********************************************************************

Test test_15
UNMAP+DEALLOC: Unmap an accessed filebacked map and check for memory deallocation

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_15.c
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 937 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_15
INFO: Initially 0 maps. 	Okay.
INFO: 113
INFO: 114
INFO: 115
INFO: 116
INFO: 117
INFO: Created file big.txt with length 20480 bytes. 	Okay.
sys_wmap: Checking range addr=0x60000000 len=20480
Range 0x60000000-0x60005000 is free
Created mapping: addr=0x60000000, length=0x5000, flags=0xa
INFO: Placed map 1 at 0x60000000 with length 20480. 	Okay.
INFO: Accessed all pages of Map 1. 	Okay.
INFO: Map 1 unmapped. 	Okay.
INFO: Unmapped pages are deallocated. 	Okay.
[0;32mSUCCESS:[0m TEST_15	 PASSED

$ 

test test_15 PASSED (1 of 1)
 (UNMAP+DEALLOC: Unmap an accessed filebacked map and check for memory deallocation)

starting test_16

**********************************************************************

Test test_16
UNMAP: Edit a filebacked map and verify its changes are reflected

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_16.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 946 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_16
INFO: Initially 0 maps. 	Okay.
INFO: 113
INFO: 114
INFO: 115
INFO: 116
INFO: 117
INFO: Created file big.txt with length 20480 bytes. 	Okay.
sys_wmap: Checking range addr=0x60000000 len=20480
Range 0x60000000-0x60005000 is free
Created mapping: addr=0x60000000, length=0x5000, flags=0xa
INFO: Placed map 1 at 0x60000000 with length 20480. 	Okay.
INFO: Accessed all pages of Map 1. 	Okay.
Map 1 unmapped. 	Okay.
Unmapped pages are deallocated. 	Okay.
INFO: Edited map content is reflected in the file. 	Okay.
[0;32mSUCCESS:[0m TEST_16	 PASSED

$ 

test test_16 PASSED (1 of 1)
 (UNMAP: Edit a filebacked map and verify its changes are reflected)

starting test_17

**********************************************************************

Test test_17
Fork: Same maps exist in both parent and multiple childs

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_17.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 936 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_17
INFO: Initially 0 maps. 	Okay.
INFO: 113
INFO: 114
INFO: 115
INFO: Created file big.txt with length 12288 bytes. 	Okay.
sys_wmap: Checking range addr=0x60000000 len=12288
Range 0x60000000-0x60003000 is free
Created mapping: addr=0x60000000, length=0x3000, flags=0xa
INFO: Placed map 1 at 0x60000000 with length 12288. 	Okay.
sys_wmap: Checking range addr=0x60004000 len=16384
Checking overlap: new(0x60004000-0x60008000) vs existing(0x60000000-0x60003000)
Range 0x60004000-0x60008000 is free
Created mapping: addr=0x60004000, length=0x3064, flags=0xe
INFO: Placed map 2 at 0x60004000 with length 12388. 	Okay.
INFO: Map 1 and 2 INFO: Map 1 INFO: Map 1 andeand 2 exist 2 exixist in Child (pid 4). 	Ok in Child (pid 5). 	Okay.
st in ChildINFO: Map 1 and 2 exist iINFO: Map 1 and 2 e (pid 6). 	Okay.
n Chixist in ChilINFO: Map 1 and 2 exist in ChilINFO: Map 1 and 2 existINFO: Map ld (pid 7).  in Child (pid 101	). 	Okay.
 INFO: Map 1Okay.
dand 2 exist in Child ( and  pid 11). 	Okay.
2INFO: Map 1 and 2 exist in(pid 8). 	Oka exist in Child (p Child (pid 13y.
d (pidid 12). 	Okay.). 	Okay.
a 
y.
9). 	Okay.
INFO: Map 1 and 2 exist in Parent (pid 3). 	Okay.
[0;32mSUCCESS:[0m TEST_17	 PASSED

$ 

test test_17 PASSED (1 of 1)
 (Fork: Same maps exist in both parent and multiple childs)

starting test_18

**********************************************************************

Test test_18
Fork: Same map contents exist in both parent and multiple childs

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_18.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 947 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_18
INFO: Initially 0 maps. 	Okay.
INFO: 113
INFO: 114
INFO: Created file big.txt with length 8192 bytes. 	Okay.
sys_wmap: Checking range addr=0x60000000 len=8192
Range 0x60000000-0x60002000 is free
Created mapping: addr=0x60000000, length=0x2000, flags=0xa
INFO: Placed map 1 at 0x60000000 with length 8192. 	Okay.
sys_wmap: Checking range addr=0x60003000 len=12288
Checking overlap: new(0x60003000-0x60006000) vs existing(0x60000000-0x60002000)
Range 0x60003000-0x60006000 is free
Created mapping: addr=0x60003000, length=0x2064, flags=0xe
INFO: Placed map 2 at 0x60003000 with length 8292. 	Okay.
INFO: Map INFINFO: Map 1 and 2 exINFO:O: Map 1ist in Child (pid 6 Map 1 and 2 exisINFO: Map 1 and 2 exINFININFO: O: Map 1 and 2 exist in CFO: Map Map 1 and 2 exist in Child (pid INFO: Map 1 and 2 exist in Child (pid 12). 	Okay.
INFO: Map 1 and 2 e1 and 2 exist in Ch11). 	Okax1ild (pid 1y.
i and and 2 exist in Child (pi). 	Okay.
st in Child (pid  2 exist in Child (pid 4). 	Od 5). 	Okay.
t in Child (pid 7). 	Okay.
ist in Child (pid 8). 	Okay.
hild (0). 	Okay.
13). 	Okay.kay.
pid 
9). 	Okay.
INFO: Map 1 and 2 exist in Parent (pid 3). 	Okay.
[0;32mSUCCESS:[0m TEST_18	 PASSED

$ 

test test_18 PASSED (1 of 1)
 (Fork: Same map contents exist in both parent and multiple childs)

starting test_19

**********************************************************************

Test test_19
Fork+EDIT: Both parent and child can see each other's edits in anonymous maps

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_19.c
DEBUG: Copying header file to project path
Trying to build project using make
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make xv6.img fs.img
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 936 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_19
INFO: Initially 0 maps. 	Okay.
sys_wmap: Checking range addr=0x60000000 len=40960
Range 0x60000000-0x6000a000 is free
Created mapping: addr=0x60000000, length=0xa000, flags=0xe
INFO: Placed map 1 at 0x60000000 with length 40960. 	Okay.
INFO: Child process sees Map 1. 	Okay
INFO: Child sees the parent's modification. 	Okay
INFO: Parent process sees Map 1. 	Okay
INFO: Parent sees the child's modification. 	Okay
[0;32mSUCCESS:[0m TEST_19	 PASSED

$ 

test test_19 PASSED (1 of 1)
 (Fork+EDIT: Both parent and child can see each other's edits in anonymous maps)

starting test_20

**********************************************************************

Test test_20
FORK+UNMAP: Child unmaps a shared map, parent is not affected

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_20.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 946 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_20
INFO: Initially 0 maps. 	Okay.
sys_wmap: Checking range addr=0x60000000 len=40960
Range 0x60000000-0x6000a000 is free
Created mapping: addr=0x60000000, length=0xa000, flags=0xe
INFO: Placed map 1 at 0x60000000 with length 40960. 	Okay.
INFO: Accessed Map 1. 	Okay
INFO: Child process sees Map 1. 	Okay
INFO: Child process unmaps Map 1. 	Okay
INFO: Parent process sees Map 1. 	Okay
INFO: Parent sees the child's modification. 	Okay
[0;32mSUCCESS:[0m TEST_20	 PASSED

$ 

test test_20 PASSED (1 of 1)
 (FORK+UNMAP: Child unmaps a shared map, parent is not affected)

starting test_21

**********************************************************************

Test test_21
ELF: fix permissions of ELF pages

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_21.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 934 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_21
Segmentation Fault
$ 

test test_21 PASSED (1 of 1)
 (ELF: fix permissions of ELF pages)

starting test_22

**********************************************************************

Test test_22
COW: allocated array has same pa in parent and child before modification

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_22.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
make: 'xv6.img' is up to date.
make: 'fs.img' is up to date.
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 939 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_22
Parent: sum = 1012960
INFO: Parent: arr pa = 0xDFC0000
Child: Child: sum = 1012960
INFO: ChilChild: sum = sum = 101d: arr 1012960
INFO:2960
INFO: Child:pa =  Child: arrChild: sum 0xDE7E000
[0;31mERROR: [0mParent and child have different  pa = 0xDE2D000
[0;31mERROR: [0mParent and child have different pa

[0;31mFA= 1012960
INFO: Child: Child: sum = 1012960
IL:[0m TEarr pa = 0xDDDC000
INFO: Child: arr ST_22	 FAILED (pid 6[0;31mERROR: [0mParent pa = 0xDD8B000
)

and child ha[0;31mERvROR: [0mParChild: sum = Child: sum = 1e different pa

10012960
I[0;31mFA12960
INFONFO: Child: arr Child: sum = 1012960
IL:[0m TEST_22	 FAILED:INFO: Child: arr pa = 0xDC98000
[0;31mERROR: [ (pid 7)

ent and child have different pa

[0; Child: arr pa = 0xDD3A000
[0;31mERROR: [0mpa = 0xDCE9000
[0;31mERROR: [0mPa0mParent and child have different pa

[0;31mFAIL:[0m TEST_22	 FAILED (pid 11)
Child: sum = 1012960
INFO: Child: arr pa = 0xChild: sum = 1012960
INFO: Child: arr pa = 0xDBF6000
[0;31mERROR: [0mParent and c arr pa = 0xDECF000
[0;31mERROR: [
DC47000
hild have 0[0;31mEdifferent pa

mParRROR: [0m[0;31mFAIL:[0m ent anpa

Parent and child have different d child ha[0;31mFAIL:[0m TEST_22pa

ve different pa	 FAILED (pid 5)
31m[0;31mFAIL:[0m TEST_TEST_22	 FAILED (p
FAParent and crent and child hid 13)



IL:[0mhild have differave different pa

[0;31mFAIL:ent pa

[0;31mFAIL:[022	 FAILED (pid 12)

[[0;31mFAIL:[0m T0m TEST_22	 FAILED (pid 4)

 EST_22	 FAIm TEST_22	 FAILED (pid 10)
TEST_22	 FLED (pid 9)

AILED (pid 8)


[0;32mSUCCESS:[0m TEST_22	 PASSED

$ 
Cleaning up after failure
Trying to clean project using make clean
make clean
rm -f *.tex *.dvi *.idx *.aux *.log *.ind *.ilg \
*.o *.d *.asm *.sym vectors.S bootblock entryother \
initcode initcode.out kernel xv6.img fs.img kernelmemfs \
xv6memfs.img mkfs .gdbinit \
_cat _echo _forktest _grep _init _kill _ln _ls _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 


test test_22 FAILED (0 of 1)
 (COW: allocated array has same pa in parent and child before modification)
 tester failed

starting test_23

**********************************************************************

Test test_23
COW: allocated array has diff pa in parent and child after modification

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_23.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -fno-pic -O -nostdinc -I. -c bootmain.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -fno-pic -nostdinc -I. -c bootasm.S
ld -m    elf_i386 -N -e start -Ttext 0x7C00 -o bootblock.o bootasm.o bootmain.o
objdump -S bootblock.o > bootblock.asm
objcopy -S -O binary -j .text bootblock.o bootblock
./sign.pl bootblock
boot block is 451 bytes (max 510)
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o bio.o bio.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o console.o console.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o exec.o exec.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o file.o file.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o fs.o fs.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ide.o ide.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ioapic.o ioapic.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o kalloc.o kalloc.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o kbd.o kbd.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o lapic.o lapic.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o log.o log.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o main.o main.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o mp.o mp.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o picirq.o picirq.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o pipe.o pipe.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o proc.o proc.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sleeplock.o sleeplock.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o spinlock.o spinlock.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o string.o string.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o swtch.o swtch.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o syscall.o syscall.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sysfile.o sysfile.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sysproc.o sysproc.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o trapasm.o trapasm.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o trap.o trap.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o uart.o uart.c
./vectors.pl > vectors.S
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o vectors.o vectors.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o vm.o vm.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o wmap.o wmap.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o entry.o entry.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -fno-pic -nostdinc -I. -c entryother.S
ld -m    elf_i386 -N -e start -Ttext 0x7000 -o bootblockother.o entryother.o
objcopy -S -O binary -j .text bootblockother.o entryother
objdump -S bootblockother.o > entryother.asm
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -nostdinc -I. -c initcode.S
ld -m    elf_i386 -N -e start -Ttext 0 -o initcode.out initcode.o
objcopy -S -O binary initcode.out initcode
objdump -S initcode.o > initcode.asm
ld -m    elf_i386 -T kernel.ld -o kernel entry.o bio.o console.o exec.o file.o fs.o ide.o ioapic.o kalloc.o kbd.o lapic.o log.o main.o mp.o picirq.o pipe.o proc.o sleeplock.o spinlock.o string.o swtch.o syscall.o sysfile.o sysproc.o trapasm.o trap.o uart.o vectors.o vm.o wmap.o  -b binary initcode entryother
objdump -S kernel > kernel.asm
objdump -t kernel | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > kernel.sym
dd if=/dev/zero of=xv6.img count=10000
10000+0 records in
10000+0 records out
5120000 bytes (5.1 MB, 4.9 MiB) copied, 0.128335 s, 39.9 MB/s
dd if=bootblock of=xv6.img conv=notrunc
1+0 records in
1+0 records out
512 bytes copied, 0.00032512 s, 1.6 MB/s
dd if=kernel of=xv6.img seek=1 conv=notrunc
435+1 records in
435+1 records out
223220 bytes (223 kB, 218 KiB) copied, 0.00124044 s, 180 MB/s
gcc -Werror -Wall -o mkfs mkfs.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ulib.o ulib.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o usys.o usys.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o printf.o printf.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o umalloc.o umalloc.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o cat.o cat.c
ld -m    elf_i386 -e main -Ttext 0 -o _cat cat.o ulib.o usys.o printf.o umalloc.o
objdump -S _cat > cat.asm
objdump -t _cat | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > cat.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o echo.o echo.c
ld -m    elf_i386 -e main -Ttext 0 -o _echo echo.o ulib.o usys.o printf.o umalloc.o
objdump -S _echo > echo.asm
objdump -t _echo | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > echo.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o forktest.o forktest.c
# forktest has less library code linked in - needs to be small
# in order to be able to max out the proc table.
ld -m    elf_i386 -N -e main -Ttext 0 -o _forktest forktest.o ulib.o usys.o
objdump -S _forktest > forktest.asm
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o grep.o grep.c
ld -m    elf_i386 -e main -Ttext 0 -o _grep grep.o ulib.o usys.o printf.o umalloc.o
objdump -S _grep > grep.asm
objdump -t _grep | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > grep.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o init.o init.c
ld -m    elf_i386 -e main -Ttext 0 -o _init init.o ulib.o usys.o printf.o umalloc.o
objdump -S _init > init.asm
objdump -t _init | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > init.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o kill.o kill.c
ld -m    elf_i386 -e main -Ttext 0 -o _kill kill.o ulib.o usys.o printf.o umalloc.o
objdump -S _kill > kill.asm
objdump -t _kill | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > kill.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ln.o ln.c
ld -m    elf_i386 -e main -Ttext 0 -o _ln ln.o ulib.o usys.o printf.o umalloc.o
objdump -S _ln > ln.asm
objdump -t _ln | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > ln.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ls.o ls.c
ld -m    elf_i386 -e main -Ttext 0 -o _ls ls.o ulib.o usys.o printf.o umalloc.o
objdump -S _ls > ls.asm
objdump -t _ls | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > ls.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o mkdir.o mkdir.c
ld -m    elf_i386 -e main -Ttext 0 -o _mkdir mkdir.o ulib.o usys.o printf.o umalloc.o
objdump -S _mkdir > mkdir.asm
objdump -t _mkdir | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > mkdir.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o rm.o rm.c
ld -m    elf_i386 -e main -Ttext 0 -o _rm rm.o ulib.o usys.o printf.o umalloc.o
objdump -S _rm > rm.asm
objdump -t _rm | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > rm.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sh.o sh.c
ld -m    elf_i386 -e main -Ttext 0 -o _sh sh.o ulib.o usys.o printf.o umalloc.o
objdump -S _sh > sh.asm
objdump -t _sh | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > sh.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o stressfs.o stressfs.c
ld -m    elf_i386 -e main -Ttext 0 -o _stressfs stressfs.o ulib.o usys.o printf.o umalloc.o
objdump -S _stressfs > stressfs.asm
objdump -t _stressfs | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > stressfs.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o usertests.o usertests.c
ld -m    elf_i386 -e main -Ttext 0 -o _usertests usertests.o ulib.o usys.o printf.o umalloc.o
objdump -S _usertests > usertests.asm
objdump -t _usertests | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > usertests.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o wc.o wc.c
ld -m    elf_i386 -e main -Ttext 0 -o _wc wc.o ulib.o usys.o printf.o umalloc.o
objdump -S _wc > wc.asm
objdump -t _wc | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > wc.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o zombie.o zombie.c
ld -m    elf_i386 -e main -Ttext 0 -o _zombie zombie.o ulib.o usys.o printf.o umalloc.o
objdump -S _zombie > zombie.asm
objdump -t _zombie | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > zombie.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o test.o test.c
ld -m    elf_i386 -e main -Ttext 0 -o _test test.o ulib.o usys.o printf.o umalloc.o
objdump -S _test > test.asm
objdump -t _test | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > test.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 873 blocks have been allocated
balloc: write bitmap block at sector 58
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 947 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_23
Parent: sum = 1012960
INFO: Parent: arr pa = 0xDFC0000
Child: sum = 1012960
INFO: Child: arr pa = 0xDChild: sum = 1012960
INFO: Child: arr pa = 0xDE7B000
[0;31mERROR: [0mParent and child have different pChild: sum = 1012960
INFO:Child: sECDhysical addresses

 Child: arr pa = 0xDE29000
[0;31mERROR: [0mParent and child have differeum = 101Child: sum = 1012960
[0;31mFAI2960
INFO:INFO: Child: arr pa = 0xChild: sum = 1012960
INFO: Child: arr pa = 0xDD33000
[0;31mERROR: [0mPareChild: sum = 1012960
INFO: Child: arr pa = 0xDCL:[0m TEST_23	 FAILED (pid 5)

nt physical addresses

[0;31mFAIL:[0m TEST_23	 FAILED (pid 6)

 Child: arr pa = 0xDDD7000
DD85000
[0;31mERROR: [0mParent and child havE1000
[0;31mERROR: [0mParent and child have dif[0;31mERRe different physical addressnt and child have diffferent physical addresses

ees

[0;31mFAIL:[0m TEST_23	 FAILED (rent physical addresses

[0;31mFAI[0;31mFAIL:[0m TEST_23	 FAILED (pid 8)
pid 9)

L:[0m TEST_23	 FAILED (pid 10)

Child:Child: sum = 1012960
INFO: Child:
 s arr pa = 0xDC3D000
Child: sum = 1012960
Ium = 1012960
I[0;31mERROR: [0mParent andNFO: Child: arr pa = 0xDBEB000
NFO: Child: arr p child have different physical add[0;31mERROR: [0mPar000
[0;31mERROR: [0mParea = 0xDC8F000
[0resses

[0;31mFAIL:[0m TEST_23	 FAILED (pid 12)
nt and chOR: [0mParent and ch;31mERRiOR: [0
ent and child have different physical addressesild havld have different physimParent and child

[0;31mFAILcal addres have different physical :[0m TEST_23	 FAILED (pid 13)

eses

addres different phy[0;31mFAIL:[0ses

sm TEST_23	 FAILED (p[0;31mFAIL:[0ical aid 7)

m TEdST_23	 FAILED (pid dresses

11)
[0;31mFAIL:[0m TEST_23	 FAILED (pid 
4)

[0;32mSUCCESS:[0m TEST_23	 PASSED

$ 
Cleaning up after failure
Trying to clean project using make clean
make clean
rm -f *.tex *.dvi *.idx *.aux *.log *.ind *.ilg \
*.o *.d *.asm *.sym vectors.S bootblock entryother \
initcode initcode.out kernel xv6.img fs.img kernelmemfs \
xv6memfs.img mkfs .gdbinit \
_cat _echo _forktest _grep _init _kill _ln _ls _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 


test test_23 FAILED (0 of 1)
 (COW: allocated array has diff pa in parent and child after modification)
 tester failed

starting test_24

**********************************************************************

Test test_24
COW: kfreeing child's page does not affect parent's page in COW

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_24.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -fno-pic -O -nostdinc -I. -c bootmain.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -fno-pic -nostdinc -I. -c bootasm.S
ld -m    elf_i386 -N -e start -Ttext 0x7C00 -o bootblock.o bootasm.o bootmain.o
objdump -S bootblock.o > bootblock.asm
objcopy -S -O binary -j .text bootblock.o bootblock
./sign.pl bootblock
boot block is 451 bytes (max 510)
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o bio.o bio.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o console.o console.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o exec.o exec.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o file.o file.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o fs.o fs.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ide.o ide.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ioapic.o ioapic.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o kalloc.o kalloc.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o kbd.o kbd.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o lapic.o lapic.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o log.o log.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o main.o main.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o mp.o mp.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o picirq.o picirq.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o pipe.o pipe.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o proc.o proc.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sleeplock.o sleeplock.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o spinlock.o spinlock.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o string.o string.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o swtch.o swtch.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o syscall.o syscall.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sysfile.o sysfile.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sysproc.o sysproc.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o trapasm.o trapasm.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o trap.o trap.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o uart.o uart.c
./vectors.pl > vectors.S
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o vectors.o vectors.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o vm.o vm.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o wmap.o wmap.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o entry.o entry.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -fno-pic -nostdinc -I. -c entryother.S
ld -m    elf_i386 -N -e start -Ttext 0x7000 -o bootblockother.o entryother.o
objcopy -S -O binary -j .text bootblockother.o entryother
objdump -S bootblockother.o > entryother.asm
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -nostdinc -I. -c initcode.S
ld -m    elf_i386 -N -e start -Ttext 0 -o initcode.out initcode.o
objcopy -S -O binary initcode.out initcode
objdump -S initcode.o > initcode.asm
ld -m    elf_i386 -T kernel.ld -o kernel entry.o bio.o console.o exec.o file.o fs.o ide.o ioapic.o kalloc.o kbd.o lapic.o log.o main.o mp.o picirq.o pipe.o proc.o sleeplock.o spinlock.o string.o swtch.o syscall.o sysfile.o sysproc.o trapasm.o trap.o uart.o vectors.o vm.o wmap.o  -b binary initcode entryother
objdump -S kernel > kernel.asm
objdump -t kernel | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > kernel.sym
dd if=/dev/zero of=xv6.img count=10000
10000+0 records in
10000+0 records out
5120000 bytes (5.1 MB, 4.9 MiB) copied, 0.108678 s, 47.1 MB/s
dd if=bootblock of=xv6.img conv=notrunc
1+0 records in
1+0 records out
512 bytes copied, 0.000644463 s, 794 kB/s
dd if=kernel of=xv6.img seek=1 conv=notrunc
435+1 records in
435+1 records out
223220 bytes (223 kB, 218 KiB) copied, 0.014377 s, 15.5 MB/s
gcc -Werror -Wall -o mkfs mkfs.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ulib.o ulib.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o usys.o usys.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o printf.o printf.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o umalloc.o umalloc.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o cat.o cat.c
ld -m    elf_i386 -e main -Ttext 0 -o _cat cat.o ulib.o usys.o printf.o umalloc.o
objdump -S _cat > cat.asm
objdump -t _cat | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > cat.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o echo.o echo.c
ld -m    elf_i386 -e main -Ttext 0 -o _echo echo.o ulib.o usys.o printf.o umalloc.o
objdump -S _echo > echo.asm
objdump -t _echo | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > echo.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o forktest.o forktest.c
# forktest has less library code linked in - needs to be small
# in order to be able to max out the proc table.
ld -m    elf_i386 -N -e main -Ttext 0 -o _forktest forktest.o ulib.o usys.o
objdump -S _forktest > forktest.asm
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o grep.o grep.c
ld -m    elf_i386 -e main -Ttext 0 -o _grep grep.o ulib.o usys.o printf.o umalloc.o
objdump -S _grep > grep.asm
objdump -t _grep | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > grep.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o init.o init.c
ld -m    elf_i386 -e main -Ttext 0 -o _init init.o ulib.o usys.o printf.o umalloc.o
objdump -S _init > init.asm
objdump -t _init | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > init.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o kill.o kill.c
ld -m    elf_i386 -e main -Ttext 0 -o _kill kill.o ulib.o usys.o printf.o umalloc.o
objdump -S _kill > kill.asm
objdump -t _kill | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > kill.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ln.o ln.c
ld -m    elf_i386 -e main -Ttext 0 -o _ln ln.o ulib.o usys.o printf.o umalloc.o
objdump -S _ln > ln.asm
objdump -t _ln | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > ln.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ls.o ls.c
ld -m    elf_i386 -e main -Ttext 0 -o _ls ls.o ulib.o usys.o printf.o umalloc.o
objdump -S _ls > ls.asm
objdump -t _ls | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > ls.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o mkdir.o mkdir.c
ld -m    elf_i386 -e main -Ttext 0 -o _mkdir mkdir.o ulib.o usys.o printf.o umalloc.o
objdump -S _mkdir > mkdir.asm
objdump -t _mkdir | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > mkdir.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o rm.o rm.c
ld -m    elf_i386 -e main -Ttext 0 -o _rm rm.o ulib.o usys.o printf.o umalloc.o
objdump -S _rm > rm.asm
objdump -t _rm | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > rm.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sh.o sh.c
ld -m    elf_i386 -e main -Ttext 0 -o _sh sh.o ulib.o usys.o printf.o umalloc.o
objdump -S _sh > sh.asm
objdump -t _sh | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > sh.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o stressfs.o stressfs.c
ld -m    elf_i386 -e main -Ttext 0 -o _stressfs stressfs.o ulib.o usys.o printf.o umalloc.o
objdump -S _stressfs > stressfs.asm
objdump -t _stressfs | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > stressfs.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o usertests.o usertests.c
ld -m    elf_i386 -e main -Ttext 0 -o _usertests usertests.o ulib.o usys.o printf.o umalloc.o
objdump -S _usertests > usertests.asm
objdump -t _usertests | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > usertests.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o wc.o wc.c
ld -m    elf_i386 -e main -Ttext 0 -o _wc wc.o ulib.o usys.o printf.o umalloc.o
objdump -S _wc > wc.asm
objdump -t _wc | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > wc.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o zombie.o zombie.c
ld -m    elf_i386 -e main -Ttext 0 -o _zombie zombie.o ulib.o usys.o printf.o umalloc.o
objdump -S _zombie > zombie.asm
objdump -t _zombie | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > zombie.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o test.o test.c
ld -m    elf_i386 -e main -Ttext 0 -o _test test.o ulib.o usys.o printf.o umalloc.o
objdump -S _test > test.asm
objdump -t _test | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > test.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 873 blocks have been allocated
balloc: write bitmap block at sector 58
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 948 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_24
Parent: sum = 1012960
INFO: Parent: arr pa = 0xDFC0000
Child: sum = Child:1 sum = 101296C012960
INFO: Child: 0
INFO: Child: arr pa = 0xDE7B000
[0;31hilarr pa = 0xDECD000
[0;31mERROR: [0mParent and child have different physicd: sum = 1012960
INChild: mERRORFO: Child: arr psum = 1012960
Ch:INFO: Child: arr paild [0 = 0xDDD7000
: sum = 1012960mParent a[0;31mERROR: 
INnd ch[0mParent and chiFO: Chilild have different physical addresses

ld have did[0;31mFAIL:fferent physica: arr p[0m TEST_24	 FAILED (pid 4la = 0xDD)
 a85000

addres[0;31mERlses

R addresses
OR: [0mParent and c
[0;31mFAIL[0;31mFAIL:[0m hild have different physical:[0m TETEST_24	 FAIL addresses

ST_2ED [0;31mFAIL4	 FAILED (pid (pid 7)

:5)

[0m TESChild: aT_24	 FAILEDsum = 1  (pid 012960
I= 0xDE29000
8NFO: Child: arr pa = 0xDD33000
[0;31mERROR: [0mParent and childChild: sum = Child:[0;31mERROR: [0mParent and child have different)

 h sum = 1012960
Iave di1012960
INFO: Childfferent physica:l addresses

NFO: Child: arr  arr pa[0;31mFAIL:[0m TEST_24	 FAILEDpa = 0xDCE1 = Child: sum = 1000xDC8F000
012960
INFO: 0[0;31mERROChild: arr pa Child: sum =  physical a
[0;31mERROR: [0mP= 0xDC3D000
[0;31ddresses

arent and child have dimfferent physical addresses

[0;31mFAIL:[0m TEST_24	 ERROR: [0mP[0;31mFAIL:[0m TEST (pid 9)
FAILED (pid arent and child have different physical addresses

R: [0mParent
[10)
 and child have different physical add0;31mFAIL:[0m TEST_24	 F101A2960
INFO: Child:
resseILED (pid 12)

 arr pa = 0xDBEB0_24	 FAILED s

00
([0;31mFAIL:[0;31mERROR: [0mParent pid 6)
[and child have different phy
0m TEST_24	 FAILED sical address(pid 11)

es

[0;31mFAIL:[0m TEST_24	 FAILED (pid 13)

[0;32mSUCCESS:[0m TEST_24	 PASSED

$ 
Cleaning up after failure
Trying to clean project using make clean
make clean
rm -f *.tex *.dvi *.idx *.aux *.log *.ind *.ilg \
*.o *.d *.asm *.sym vectors.S bootblock entryother \
initcode initcode.out kernel xv6.img fs.img kernelmemfs \
xv6memfs.img mkfs .gdbinit \
_cat _echo _forktest _grep _init _kill _ln _ls _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 


test test_24 FAILED (0 of 1)
 (COW: kfreeing child's page does not affect parent's page in COW)
 tester failed

starting test_25

**********************************************************************

Test test_25
COW+STRESS: static parent arr 50000 pages, can't fork child without COW

**********************************************************************
Running xv6 user progam /home/wadhawan/private/cs537/cs537-p5/tests/ctests/test_25.c
DEBUG: Copying header file to project path
Trying to build project using make
make xv6.img fs.img
/tmp/tmpgpwkfd3r/p/Makefile
/tmp/tmpgpwkfd3r/p/Makefile.test
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -fno-pic -O -nostdinc -I. -c bootmain.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -fno-pic -nostdinc -I. -c bootasm.S
ld -m    elf_i386 -N -e start -Ttext 0x7C00 -o bootblock.o bootasm.o bootmain.o
objdump -S bootblock.o > bootblock.asm
objcopy -S -O binary -j .text bootblock.o bootblock
./sign.pl bootblock
boot block is 451 bytes (max 510)
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o bio.o bio.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o console.o console.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o exec.o exec.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o file.o file.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o fs.o fs.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ide.o ide.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ioapic.o ioapic.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o kalloc.o kalloc.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o kbd.o kbd.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o lapic.o lapic.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o log.o log.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o main.o main.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o mp.o mp.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o picirq.o picirq.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o pipe.o pipe.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o proc.o proc.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sleeplock.o sleeplock.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o spinlock.o spinlock.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o string.o string.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o swtch.o swtch.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o syscall.o syscall.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sysfile.o sysfile.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sysproc.o sysproc.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o trapasm.o trapasm.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o trap.o trap.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o uart.o uart.c
./vectors.pl > vectors.S
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o vectors.o vectors.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o vm.o vm.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o wmap.o wmap.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o entry.o entry.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -fno-pic -nostdinc -I. -c entryother.S
ld -m    elf_i386 -N -e start -Ttext 0x7000 -o bootblockother.o entryother.o
objcopy -S -O binary -j .text bootblockother.o entryother
objdump -S bootblockother.o > entryother.asm
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie -nostdinc -I. -c initcode.S
ld -m    elf_i386 -N -e start -Ttext 0 -o initcode.out initcode.o
objcopy -S -O binary initcode.out initcode
objdump -S initcode.o > initcode.asm
ld -m    elf_i386 -T kernel.ld -o kernel entry.o bio.o console.o exec.o file.o fs.o ide.o ioapic.o kalloc.o kbd.o lapic.o log.o main.o mp.o picirq.o pipe.o proc.o sleeplock.o spinlock.o string.o swtch.o syscall.o sysfile.o sysproc.o trapasm.o trap.o uart.o vectors.o vm.o wmap.o  -b binary initcode entryother
objdump -S kernel > kernel.asm
objdump -t kernel | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > kernel.sym
dd if=/dev/zero of=xv6.img count=10000
10000+0 records in
10000+0 records out
5120000 bytes (5.1 MB, 4.9 MiB) copied, 0.111273 s, 46.0 MB/s
dd if=bootblock of=xv6.img conv=notrunc
1+0 records in
1+0 records out
512 bytes copied, 0.00352913 s, 145 kB/s
dd if=kernel of=xv6.img seek=1 conv=notrunc
435+1 records in
435+1 records out
223220 bytes (223 kB, 218 KiB) copied, 0.00854841 s, 26.1 MB/s
gcc -Werror -Wall -o mkfs mkfs.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ulib.o ulib.c
gcc -m32 -gdwarf-2 -Wa,-divide   -c -o usys.o usys.S
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o printf.o printf.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o umalloc.o umalloc.c
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o cat.o cat.c
ld -m    elf_i386 -e main -Ttext 0 -o _cat cat.o ulib.o usys.o printf.o umalloc.o
objdump -S _cat > cat.asm
objdump -t _cat | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > cat.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o echo.o echo.c
ld -m    elf_i386 -e main -Ttext 0 -o _echo echo.o ulib.o usys.o printf.o umalloc.o
objdump -S _echo > echo.asm
objdump -t _echo | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > echo.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o forktest.o forktest.c
# forktest has less library code linked in - needs to be small
# in order to be able to max out the proc table.
ld -m    elf_i386 -N -e main -Ttext 0 -o _forktest forktest.o ulib.o usys.o
objdump -S _forktest > forktest.asm
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o grep.o grep.c
ld -m    elf_i386 -e main -Ttext 0 -o _grep grep.o ulib.o usys.o printf.o umalloc.o
objdump -S _grep > grep.asm
objdump -t _grep | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > grep.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o init.o init.c
ld -m    elf_i386 -e main -Ttext 0 -o _init init.o ulib.o usys.o printf.o umalloc.o
objdump -S _init > init.asm
objdump -t _init | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > init.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o kill.o kill.c
ld -m    elf_i386 -e main -Ttext 0 -o _kill kill.o ulib.o usys.o printf.o umalloc.o
objdump -S _kill > kill.asm
objdump -t _kill | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > kill.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ln.o ln.c
ld -m    elf_i386 -e main -Ttext 0 -o _ln ln.o ulib.o usys.o printf.o umalloc.o
objdump -S _ln > ln.asm
objdump -t _ln | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > ln.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o ls.o ls.c
ld -m    elf_i386 -e main -Ttext 0 -o _ls ls.o ulib.o usys.o printf.o umalloc.o
objdump -S _ls > ls.asm
objdump -t _ls | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > ls.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o mkdir.o mkdir.c
ld -m    elf_i386 -e main -Ttext 0 -o _mkdir mkdir.o ulib.o usys.o printf.o umalloc.o
objdump -S _mkdir > mkdir.asm
objdump -t _mkdir | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > mkdir.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o rm.o rm.c
ld -m    elf_i386 -e main -Ttext 0 -o _rm rm.o ulib.o usys.o printf.o umalloc.o
objdump -S _rm > rm.asm
objdump -t _rm | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > rm.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o sh.o sh.c
ld -m    elf_i386 -e main -Ttext 0 -o _sh sh.o ulib.o usys.o printf.o umalloc.o
objdump -S _sh > sh.asm
objdump -t _sh | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > sh.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o stressfs.o stressfs.c
ld -m    elf_i386 -e main -Ttext 0 -o _stressfs stressfs.o ulib.o usys.o printf.o umalloc.o
objdump -S _stressfs > stressfs.asm
objdump -t _stressfs | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > stressfs.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o usertests.o usertests.c
ld -m    elf_i386 -e main -Ttext 0 -o _usertests usertests.o ulib.o usys.o printf.o umalloc.o
objdump -S _usertests > usertests.asm
objdump -t _usertests | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > usertests.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o wc.o wc.c
ld -m    elf_i386 -e main -Ttext 0 -o _wc wc.o ulib.o usys.o printf.o umalloc.o
objdump -S _wc > wc.asm
objdump -t _wc | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > wc.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o zombie.o zombie.c
ld -m    elf_i386 -e main -Ttext 0 -o _zombie zombie.o ulib.o usys.o printf.o umalloc.o
objdump -S _zombie > zombie.asm
objdump -t _zombie | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > zombie.sym
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o test.o test.c
ld -m    elf_i386 -e main -Ttext 0 -o _test test.o ulib.o usys.o printf.o umalloc.o
objdump -S _test > test.asm
objdump -t _test | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > test.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 873 blocks have been allocated
balloc: write bitmap block at sector 58
make qemu-nox CPUS=1
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o tester.o tester.c
ld -m    elf_i386 -e main -Ttext 0 -o _tester tester.o ulib.o usys.o printf.o umalloc.o
objdump -S _tester > tester.asm
objdump -t _tester | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > tester.sym
./mkfs fs.img README _cat _echo _forktest _grep _init _kill _ln _ls _tester _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 
nmeta 59 (boot, super, log blocks 30 inode blocks 26, bitmap blocks 1) blocks 941 total 1000
balloc: first 936 blocks have been allocated
balloc: write bitmap block at sector 58
qemu-system-i386 -nographic -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 1 -m 512 
c[?7l[2J[0mSeaBIOS (version 1.15.0-1)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+1FF8B4A0+1FECB4A0 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..xv6...
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ tester
tester


TEST_25
Parent: sum = 0
[0;31mERROR: [0mfork() failed

[0;31mFAIL:[0m TEST_25	 FAILED (pid 3)

$ 
Cleaning up after failure
Trying to clean project using make clean
make clean
rm -f *.tex *.dvi *.idx *.aux *.log *.ind *.ilg \
*.o *.d *.asm *.sym vectors.S bootblock entryother \
initcode initcode.out kernel xv6.img fs.img kernelmemfs \
xv6memfs.img mkfs .gdbinit \
_cat _echo _forktest _grep _init _kill _ln _ls _mkdir _rm _sh _stressfs _usertests _wc _zombie _test 


test test_25 FAILED (0 of 1)
 (COW+STRESS: static parent arr 50000 pages, can't fork child without COW)
 tester failed

**********************************************************************
Summary:
test build PASSED
 (build xv6 using make)

test test_1 PASSED (1 of 1)
 (Checks the presence of all system calls)

test test_2 PASSED (1 of 1)
 (Checks the presence of Segmentation Fault)

test test_3 PASSED (1 of 1)
 (MAP: Place one fixed anonymous map)

test test_4 PASSED (1 of 1)
 (MAP: Place one fixed filebacked map)

test test_5 PASSED (1 of 1)
 (MAP: Place multiple maps, verify that overlapping maps are not allowed)

test test_6 PASSED (1 of 1)
 (MAP+ALLOC: Access fixed anonymous map (checks for memory allocation))

test test_7 PASSED (1 of 1)
 (MAP+ALLOC: access big filebacked map (checks for memory allocation))

test test_8 PASSED (1 of 1)
 (MAP+STRESS: Places a large number of maps and accesses all pages of each map)

test test_9 PASSED (1 of 1)
 (MAP+LAZY: Checks for lazy allocation in anon mapping)

test test_10 PASSED (1 of 1)
 (MAP+LAZY: Checks for lazy allocation in filebacked mapping)

test test_11 PASSED (1 of 1)
 (MAP+LAZY+STRESS: Checks for lazy allocation in filebacked mapping)

test test_12 PASSED (1 of 1)
 (UNMAP: Unmap a anonymous map)

test test_13 PASSED (1 of 1)
 (UNMAP: Unmaps a filebacked map)

test test_14 PASSED (1 of 1)
 (UNMAP+DEALLOC: Unmap accessed anonymous map and check for memory deallocation)

test test_15 PASSED (1 of 1)
 (UNMAP+DEALLOC: Unmap an accessed filebacked map and check for memory deallocation)

test test_16 PASSED (1 of 1)
 (UNMAP: Edit a filebacked map and verify its changes are reflected)

test test_17 PASSED (1 of 1)
 (Fork: Same maps exist in both parent and multiple childs)

test test_18 PASSED (1 of 1)
 (Fork: Same map contents exist in both parent and multiple childs)

test test_19 PASSED (1 of 1)
 (Fork+EDIT: Both parent and child can see each other's edits in anonymous maps)

test test_20 PASSED (1 of 1)
 (FORK+UNMAP: Child unmaps a shared map, parent is not affected)

test test_21 PASSED (1 of 1)
 (ELF: fix permissions of ELF pages)

test test_22 FAILED (0 of 1)
 (COW: allocated array has same pa in parent and child before modification)
 tester failed

test test_23 FAILED (0 of 1)
 (COW: allocated array has diff pa in parent and child after modification)
 tester failed

test test_24 FAILED (0 of 1)
 (COW: kfreeing child's page does not affect parent's page in COW)
 tester failed

test test_25 FAILED (0 of 1)
 (COW+STRESS: static parent arr 50000 pages, can't fork child without COW)
 tester failed

Passed 22 of 26 tests.
Overall 22 of 26
Points 21 of 25
